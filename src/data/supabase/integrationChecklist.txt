Supabase Integration Checklist

Phase 1: Setup & Configuration
[ ] 1.1 Create Supabase client configuration (src/data/supabase/client.ts)
[ ] 1.2 Add Supabase environment variables to env.example
[ ] 1.3 Create data transformers for camelCase conversion (src/data/supabase/transformers.ts)
[ ] 1.4 Create TypeScript types for transformed data (src/data/supabase/types.ts)

Phase 2: Data Fetching Hooks
[ ] 2.1 Create React Query hook for vessel_location_current table
[ ] 2.2 Create React Query hook for vessel_location_minute table
[ ] 2.3 Create React Query hook for vessel_location_second table
[ ] 2.4 Create React Query hook for vessel_trip table
[ ] 2.5 Create index file to export all hooks (src/data/supabase/hooks/index.ts)

Phase 3: Real-time Subscriptions
[ ] 3.1 Create real-time subscription hook for vessel_location_current
[ ] 3.2 Create real-time subscription hook for vessel_location_minute
[ ] 3.3 Create real-time subscription hook for vessel_location_second
[ ] 3.4 Create real-time subscription hook for vessel_trip
[ ] 3.5 Create index file to export all real-time hooks

Phase 4: Context Providers
[ ] 4.1 Create SupabaseVesselData context provider
[ ] 4.2 Create SupabaseVesselTrips context provider
[ ] 4.3 Create combined SupabaseData context provider
[ ] 4.4 Update main contexts index file (src/data/contexts/index.ts)

Phase 5: Integration & Testing
[ ] 5.1 Update app layout to include new providers (src/app/_layout.tsx)
[ ] 5.2 Create example component to test Supabase data
[ ] 5.3 Test real-time subscriptions work correctly
[ ] 5.4 Verify data transformation (camelCase + date conversion)
[ ] 5.5 Test error handling and loading states

Phase 6: Documentation & Cleanup
[ ] 6.1 Update contexts documentation (src/data/contexts/documentation.md)
[ ] 6.2 Add JSDoc comments to all new functions and hooks
[ ] 6.3 Create README for Supabase integration
[ ] 6.4 Remove any temporary test code
